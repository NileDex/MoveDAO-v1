import { DVOTING } from "../components/votecomponent/constants";

export const ABI = {
  address: DVOTING,
  name: "Voting",
  friends: [],
  exposed_functions: [
    {
      name: "add_candidate",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: [],
    },
    {
      name: "assert_contains_key",
      visibility: "public",
      is_entry: false,
      is_view: false,
      generic_type_params: [],
      params: ["&0x1::simple_map::SimpleMap<address, u64>", "&address"],
      return: [],
    },
    {
      name: "assert_is_initialized",
      visibility: "public",
      is_entry: false,
      is_view: false,
      generic_type_params: [],
      params: ["address"],
      return: [],
    },
    {
      name: "assert_is_owner",
      visibility: "public",
      is_entry: false,
      is_view: false,
      generic_type_params: [],
      params: ["address"],
      return: [],
    },
    {
      name: "assert_not_contains_key",
      visibility: "public",
      is_entry: false,
      is_view: false,
      generic_type_params: [],
      params: ["&0x1::simple_map::SimpleMap<address, u64>", "&address"],
      return: [],
    },
    {
      name: "assert_uninitialized",
      visibility: "public",
      is_entry: false,
      is_view: false,
      generic_type_params: [],
      params: ["address"],
      return: [],
    },
    {
      name: "declare_winner",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer"],
      return: [],
    },
    {
      name: "initialize_with_candidate",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: [],
    },
    {
      name: "vote",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "address", "address"],
      return: [],
    },
  ],
  structs: [
    {
      name: "CandidateList",
      is_native: false,
      abilities: ["key"],
      generic_type_params: [],
      fields: [
        {
          name: "candidate_list",
          type: "0x1::simple_map::SimpleMap<address, u64>",
        },
        { name: "c_list", type: "vector<address>" },
        { name: "winner", type: "address" },
      ],
    },
    {
      name: "VotingList",
      is_native: false,
      abilities: ["key"],
      generic_type_params: [],
      fields: [
        { name: "voters", type: "0x1::simple_map::SimpleMap<address, u64>" },
      ],
    },
  ],
} as const;
